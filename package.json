{
  "name": "svd-viewer",
  "displayName": "SVD Viewer",
  "description": "Standalone SVD Viewer extension extracted from cortex-debug",
  "version": "1.0.5",
  "preview": true,
  "publisher": "cortex-debug",
  "author": "Rob Moran <github@thegecko.org>",
  "license": "MIT",
  "main": "dist/desktop/extension.js",
  "browser": "dist/browser/extension.js",
  "repository": "https://github.com/cortex-debug/svd-viewer",
  "qna": "https://github.com/cortex-debug/svd-viewer/issues",
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.63.2"
  },
  "categories": [
    "Debuggers"
  ],
  "scripts": {
    "prepare": "yarn build",
    "clean": "git clean -f -x ./node_modules ./dist",
    "build": "webpack --mode production && yarn lint",
    "watch": "webpack -w",
    "lint": "eslint . --ext .ts,.tsx",
    "package": "vsce package --yarn",
    "browser": "vscode-test-web --extensionDevelopmentPath=.",
    "serve": "serve --cors -p 9000"
  },
  "dependencies": {
    "debug-tracker-vscode": "^0.0.12",
    "node-fetch": "^2.6.7",
    "xml2js": "^0.4.23"
  },
  "devDependencies": {
    "@types/node": "^12.20.0",
    "@types/vscode": "^1.63.2",
    "@types/xml2js": "^0.4.9",
    "@typescript-eslint/eslint-plugin": "^4.28.0",
    "@typescript-eslint/parser": "^4.28.0",
    "@vscode/test-web": "^0.0.24",
    "buffer": "^6.0.3",
    "eslint": "^7.29.0",
    "path-browserify": "1.0.1",
    "serve": "^14.0.1",
    "stream-browserify": "^3.0.0",
    "timers-browserify": "^2.0.12",
    "ts-loader": "^9.2.6",
    "typescript": "^3.9.6",
    "vsce": "^2.6.4",
    "vscode-debugprotocol": "^1.51.0",
    "webpack": "^5.70.0",
    "webpack-cli": "4.9.1"
  },
  "contributes": {
    "views": {
      "debug": [
        {
          "id": "svd-viewer.svd",
          "name": "Peripherals",
          "when": "svd-viewer.svd.hasData"
        }
      ]
    },
    "commands": [
      {
        "command": "svd-viewer.svd.updateNode",
        "title": "Update Value",
        "icon": "$(edit)"
      },
      {
        "command": "svd-viewer.svd.copyValue",
        "title": "Copy Value",
        "icon": "$(files)"
      },
      {
        "command": "svd-viewer.svd.forceRefresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "svd-viewer.svd.pin",
        "title": "Pin",
        "icon": "$(pin)"
      },
      {
        "command": "svd-viewer.svd.unpin",
        "title": "Unpin",
        "icon": "$(pinned)"
      },
      {
        "command": "svd-viewer.svd.setFormat",
        "title": "Set Value Format",
        "icon": "$(symbol-unit)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "svd-viewer.svd.updateNode",
          "when": "false"
        },
        {
          "command": "svd-viewer.svd.copyValue",
          "when": "false"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "false"
        },
        {
          "command": "svd-viewer.svd.pin",
          "when": "false"
        },
        {
          "command": "svd-viewer.svd.unpin",
          "when": "false"
        },
        {
          "command": "svd-viewer.svd.setFormat",
          "when": "false"
        }
      ],
      "touchBar": [
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem == registerRW"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem == register"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem == registerRO"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem =~ /peripheral.*/"
        },
        {
          "command": "svd-viewer.svd.pin",
          "when": "view == svd-viewer.svd && viewItem == peripheral"
        },
        {
          "command": "svd-viewer.svd.unpin",
          "when": "view == svd-viewer.svd && viewItem == peripheral.pinned"
        }
      ],
      "view/item/context": [
        {
          "command": "svd-viewer.svd.updateNode",
          "when": "view == svd-viewer.svd && viewItem == field",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.updateNode",
          "when": "view == svd-viewer.svd && viewItem == fieldWO",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.updateNode",
          "when": "view == svd-viewer.svd && viewItem == registerRW",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.updateNode",
          "when": "view == svd-viewer.svd && viewItem == registerWO",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.copyValue",
          "when": "view == svd-viewer.svd && viewItem == field",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.copyValue",
          "when": "view == svd-viewer.svd && viewItem == registerRW",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.copyValue",
          "when": "view == svd-viewer.svd && viewItem == registerRO",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem == registerRW",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem == register",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem == registerRO",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.forceRefresh",
          "when": "view == svd-viewer.svd && viewItem =~ /peripheral.*/",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.pin",
          "when": "view == svd-viewer.svd && viewItem == peripheral",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.unpin",
          "when": "view == svd-viewer.svd && viewItem == peripheral.pinned",
          "group": "inline"
        },
        {
          "command": "svd-viewer.svd.setFormat",
          "when": "view == svd-viewer.svd",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "SVD Viewer",
      "properties": {
        "svd-viewer.svdPathConfig": {
          "type": "string",
          "default": "svdPath",
          "description": "Debug configuration key to use to get the SVD path"
        },
        "svd-viewer.deviceConfig": {
          "type": "string",
          "default": "device",
          "description": "Debug configuration key to use to get the device"
        },
        "svd-viewer.svdAddrGapThreshold": {
          "type": "number",
          "default": 16,
          "multipleOf": 1,
          "minimum": -1,
          "maximum": 32,
          "description": "If the gap between registers is less than this threshold (multiple of 8), combine into a single read from device. -1 means never combine registers and is very slow"
        }
      }
    }
  },
  "activationEvents": [
    "onDebug",
    "onStartupFinished"
  ],
  "extensionKind": [
    "ui"
  ]
}
